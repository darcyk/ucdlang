package ie.ucd.autopsy;

import javax.swing.GroupLayout;
import javax.swing.JCheckBox;

import org.openide.awt.Mnemonics;
import org.openide.util.NbBundle;
import org.sleuthkit.autopsy.ingest.IngestModuleIngestJobSettings;
import org.sleuthkit.autopsy.ingest.IngestModuleIngestJobSettingsPanel;

/** UI component used to make per ingest job settings for Email ingest module. */
public final class EmailIngestModuleJobSettingsPanel extends IngestModuleIngestJobSettingsPanel {

	private static final long serialVersionUID = 1L;
	private JCheckBox addToGraphDatabaseCheckBox = null;

	/** Creates new form EmailIngestModuleIngestJobSettingsPanel */
	public EmailIngestModuleJobSettingsPanel(EmailIngestModuleJobSettings settings) {
		initComponents();
		customizeComponents(settings);
	}

	/**
	 * Gets the ingest job settings for an ingest module.
	 *
	 * @return The ingest settings.
	 */
	@Override
	public final IngestModuleIngestJobSettings getSettings() {
		return new EmailIngestModuleJobSettings(addToGraphDatabaseCheckBox.isSelected());
	}

	private final void customizeComponents(EmailIngestModuleJobSettings settings) {
		addToGraphDatabaseCheckBox.setSelected(settings.addToGraphDatabase());
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	private final void initComponents() {
		addToGraphDatabaseCheckBox = new JCheckBox();
		Mnemonics.setLocalizedText(addToGraphDatabaseCheckBox, NbBundle.getMessage(
				EmailIngestModuleJobSettingsPanel.class,
				"EmailIngestModuleIngestJobSettingsPanel.addToGraphDatabaseCheckBox.text")); // NOI18N
		GroupLayout layout = new GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addContainerGap().addComponent(addToGraphDatabaseCheckBox)
						.addContainerGap(255, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addContainerGap().addComponent(addToGraphDatabaseCheckBox)
						.addContainerGap(270, Short.MAX_VALUE)));
	}
}